<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="dtGroupInfo" targetNamespace="http://tempuri.org/dtGroupInfo.xsd" xmlns:mstns="http://tempuri.org/dtGroupInfo.xsd" xmlns="http://tempuri.org/dtGroupInfo.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Web.config" AppSettingsPropertyName="SimpleEAConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Public" Name="SimpleEAConnectionString (Web.config)" ParameterPrefix="@" PropertyReference="AppConfig.System.Configuration.ConfigurationManager.0.ConnectionStrings.SimpleEAConnectionString.ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupInfoTableAdapter" GeneratorDataComponentClassName="GroupInfoTableAdapter" Name="GroupInfo" UserDataComponentName="GroupInfoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SimpleEAConnectionString (Web.config)" DbObjectName="SimpleEA.dbo.GroupInfo" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetGroupInfoData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetGroupInfoData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetGroupInfoData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [GroupInfo] WHERE (([GroupName] = @Original_GroupName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_GroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [GroupInfo] ([ID], [GroupName]) VALUES (@ID, @GroupName);
SELECT ID, GroupName FROM GroupInfo WHERE (GroupName = @GroupName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@GroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT ID, GroupName FROM GroupInfo</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [GroupInfo] SET [ID] = @ID, [GroupName] = @GroupName WHERE (([GroupName] = @Original_GroupName));
SELECT ID, GroupName FROM GroupInfo WHERE (GroupName = @GroupName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@GroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_GroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="GroupName" DataSetColumn="GroupName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="SimpleEAConnectionString (Web.config)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="CheckGroupInfoExistName" Modifier="Public" Name="CheckGroupInfoExistName" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="CheckGroupInfoExistName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(GroupName)
FROM [GroupInfo]
WHERE (GroupName = @GroupName)
GROUP BY GroupName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="GroupName" ColumnName="GroupName" DataSourceName="SimpleEA.dbo.GroupInfo" DataTypeServer="nvarchar(30)" DbType="String" Direction="Input" ParameterName="@GroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="30" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="SimpleEAConnectionString (Web.config)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="CheckGroupInfoExistNameBy" Modifier="Public" Name="CheckGroupInfoExistNameBy" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="CheckGroupInfoExistNameBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT([GroupName])
FROM [GroupInfo]
WHERE ([GroupName] = @GroupName) AND ([ID] &lt;&gt; @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="GroupName" ColumnName="GroupName" DataSourceName="SimpleEA.dbo.GroupInfo" DataTypeServer="nvarchar(30)" DbType="String" Direction="Input" ParameterName="@GroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="30" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="ID" DataSourceName="SimpleEA.dbo.GroupInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="SimpleEAConnectionString (Web.config)" DbObjectName="SimpleEA.dbo.GroupInfo" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetGroupInfoDataById" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetGroupInfoDataById" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetGroupInfoDataById" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT GroupName, ID , RestrictionID FROM GroupInfo WHERE (ID = @GroupId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="GroupId" ColumnName="ID" DataSourceName="SimpleEA.dbo.GroupInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="SimpleEAConnectionString (Web.config)" DbObjectName="SimpleEA.dbo.GroupInfo" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByWithOutID" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetGroupInfoDataWithOutID" GeneratorSourceName="FillByWithOutID" GetMethodModifier="Public" GetMethodName="GetGroupInfoDataWithOutID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetGroupInfoDataWithOutID" UserSourceName="FillByWithOutID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT ID, GroupName FROM GroupInfo WHERE ID &lt;&gt; @ID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="SimpleEA.dbo.GroupInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="SimpleEAConnectionString (Web.config)" DbObjectName="SimpleEA.dbo.GroupInfo" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByGroupName" GetMethodModifier="Public" GetMethodName="GetDataByGroupName" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByGroupName" UserSourceName="GetDataByGroupName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT ID, GroupName, RestrictionID
FROM GroupInfo
WHERE (GroupName = @GroupName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="GroupName" ColumnName="GroupName" DataSourceName="SimpleEA.dbo.GroupInfo" DataTypeServer="nvarchar(30)" DbType="String" Direction="Input" ParameterName="@GroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="30" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="SimpleEAConnectionString (Web.config)" DbObjectName="SimpleEA.dbo.GroupInfo" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="GetGroupNameById" Modifier="Public" Name="GetGroupNameById" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="GetGroupNameById">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT GroupName
FROM GroupInfo
WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="SimpleEA.dbo.GroupInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="SimpleEAConnectionString (Web.config)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="GetMaxId" Modifier="Public" Name="GetMaxId" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="GetMaxId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT ISNULL(MAX(ID),-1) FROM GroupInfo</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BelongUserTableAdapter" GeneratorDataComponentClassName="BelongUserTableAdapter" Name="BelongUser" UserDataComponentName="BelongUserTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SimpleEAConnectionString (Web.config)" DbObjectName="SimpleEA.dbo.UserInfo" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByBelong" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetBelongGroupInfoDataById" GeneratorSourceName="FillByBelong" GetMethodModifier="Public" GetMethodName="GetBelongGroupInfoDataById" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetBelongGroupInfoDataById" UserSourceName="FillByBelong">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT UserInfo.UserName + '(' + UserInfo.LoginName + ')' + '[' + GroupInfo.GroupName + ']'
       AS UserList, UserInfo.LoginName
FROM GroupInfo INNER JOIN
      UserInfo ON GroupInfo.ID = UserInfo.GroupID
WHERE (UserInfo.GroupID = @GroupId) AND (GroupInfo.ID &lt;&gt; - 1)
ORDER BY UserInfo.GroupID, UserInfo.UserName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="GroupId" ColumnName="GroupID" DataSourceName="SimpleEA.dbo.UserInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserList" DataSetColumn="UserList" />
              <Mapping SourceColumn="LoginName" DataSetColumn="LoginName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="SimpleEAConnectionString (Web.config)" DbObjectName="SimpleEA.dbo.UserInfo" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByNotBelong" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetNotBelongGroupInfoDataById" GeneratorSourceName="FillByNotBelong" GetMethodModifier="Public" GetMethodName="GetNotBelongGroupInfoDataById" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetNotBelongGroupInfoDataById" UserSourceName="FillByNotBelong">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT UserInfo.LoginName, UserInfo.UserName + '(' + UserInfo.LoginName + ')' + '[' + GroupInfo.GroupName + ']' AS UserList FROM GroupInfo INNER JOIN UserInfo ON GroupInfo.ID = UserInfo.GroupID WHERE (UserInfo.GroupID &lt;&gt; @GroupId) AND (GroupInfo.ID &lt;&gt; - 1) ORDER BY UserInfo.GroupID, UserInfo.UserName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="GroupId" ColumnName="GroupID" DataSourceName="SimpleEA.dbo.UserInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="SimpleEAConnectionString (Web.config)" DbObjectName="SimpleEA.dbo.UserInfo" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillNotBelong" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetNotBelongGroupInfo" GeneratorSourceName="FillNotBelong" GetMethodModifier="Public" GetMethodName="GetNotBelongGroupInfo" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetNotBelongGroupInfo" UserSourceName="FillNotBelong">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT UserInfo.LoginName, UserInfo.UserName + '(' + UserInfo.LoginName + ')' + '[' + GroupInfo.GroupName + ']' AS UserList FROM GroupInfo INNER JOIN UserInfo ON GroupInfo.ID = UserInfo.GroupID AND GroupInfo.ID &lt;&gt; - 1 ORDER BY UserInfo.GroupID, UserInfo.UserName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="dtGroupInfo" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_DataSetName="dtGroupInfo" msprop:Generator_UserDSName="dtGroupInfo">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="GroupInfo" msprop:Generator_UserTableName="GroupInfo" msprop:Generator_RowEvArgName="GroupInfoRowChangeEvent" msprop:Generator_TableVarName="tableGroupInfo" msprop:Generator_TablePropName="GroupInfo" msprop:Generator_RowDeletingName="GroupInfoRowDeleting" msprop:Generator_RowChangingName="GroupInfoRowChanging" msprop:Generator_RowDeletedName="GroupInfoRowDeleted" msprop:Generator_TableClassName="GroupInfoDataTable" msprop:Generator_RowChangedName="GroupInfoRowChanged" msprop:Generator_RowEvHandlerName="GroupInfoRowChangeEventHandler" msprop:Generator_RowClassName="GroupInfoRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="GroupName" msprop:Generator_ColumnVarNameInTable="columnGroupName" msprop:Generator_ColumnPropNameInRow="GroupName" msprop:Generator_ColumnPropNameInTable="GroupNameColumn" msprop:Generator_UserColumnName="GroupName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RestrictionID" msprop:nullValue="_empty" msprop:Generator_ColumnPropNameInRow="RestrictionID" msprop:Generator_ColumnVarNameInTable="columnRestrictionID" msprop:Generator_ColumnPropNameInTable="RestrictionIDColumn" msprop:Generator_UserColumnName="RestrictionID" type="xs:string" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="BelongUser" msprop:Generator_UserTableName="BelongUser" msprop:Generator_RowEvArgName="BelongUserRowChangeEvent" msprop:Generator_TableVarName="tableBelongUser" msprop:Generator_TablePropName="BelongUser" msprop:Generator_RowDeletingName="BelongUserRowDeleting" msprop:Generator_RowChangingName="BelongUserRowChanging" msprop:Generator_RowDeletedName="BelongUserRowDeleted" msprop:Generator_TableClassName="BelongUserDataTable" msprop:Generator_RowChangedName="BelongUserRowChanged" msprop:Generator_RowEvHandlerName="BelongUserRowChangeEventHandler" msprop:Generator_RowClassName="BelongUserRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserList" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnUserList" msprop:Generator_ColumnPropNameInRow="UserList" msprop:Generator_ColumnPropNameInTable="UserListColumn" msprop:Generator_UserColumnName="UserList" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LoginName" msprop:Generator_ColumnVarNameInTable="columnLoginName" msprop:Generator_ColumnPropNameInRow="LoginName" msprop:Generator_ColumnPropNameInTable="LoginNameColumn" msprop:Generator_UserColumnName="LoginName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:GroupInfo" />
      <xs:field xpath="mstns:GroupName" />
    </xs:unique>
    <xs:unique name="BelongUser_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:BelongUser" />
      <xs:field xpath="mstns:LoginName" />
    </xs:unique>
  </xs:element>
</xs:schema>